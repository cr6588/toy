<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cr6588.dao.UserDao">

    <!--     User start -->
    <resultMap id="userMap" type="user" >
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="password" property="password" />
        <result column="username" property="username" />
    </resultMap>
    <sql id="userColumnList">
        `id`, `name`, `password`, `username`
    </sql>
    <insert id="batchSaveUser" parameterType="list">
        insert into `user` (
            <include refid="userColumnList"/>
        ) values
        <foreach collection="list" separator="," item="l" >
            (
                 #{l.id}, #{l.name}, #{l.password}, #{l.username}
            )
        </foreach>
    </insert>
    <insert id="saveUser" parameterType="user" keyProperty="id">
        insert into `user` (
            <include refid="userColumnList"/>
        ) values (
            #{id}, #{name}, #{password},
            #{username}
        )
    </insert>
    <update id="updateUser" parameterType="user" >
        update `user`
        <set>
            `name` = #{name},
            `password` = #{password},
            `username` = #{username},
        </set>
        where id = #{id}
    </update>
    <update id="updateUserNoNull" parameterType="user" >
        update `user`
        <set>
            <if test="name != null">`name` = #{name},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="username != null">`username` = #{username},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteUser" parameterType="map">
        delete from `user`
        <include refid="userDelecteCondition" />
    </delete>
    <sql id="userDelecteCondition">
        <where>
            <choose>
                <when test="id != null"> and `id` = #{id}</when>
                <when test="ids != null and ids.size() > 0">
                    and `id` in
                    <foreach collection="ids" item="i" open="(" close=")" separator=",">
                        #{i}
                    </foreach>
                </when>
                <otherwise>
                    error
                </otherwise>
            </choose>
        </where>
    </sql>
    <sql id="userSelectCondition">
        <where>
            <if test="id != null"> and `id` = #{id}</if>
            <if test="name != null"> and `name` = #{name}</if>
            <if test="password != null"> and `password` = #{password}</if>
            <if test="username != null"> and `username` = #{username}</if>
        </where>
    </sql>
    <select id="getUser" parameterType="map" resultMap="userMap">
        select
            <include refid="userColumnList" />
        from `user`
        <include refid="userSelectCondition" />
    </select>
    <select id="getUserList" parameterType="map" resultMap="userMap">
        select
            <include refid="userColumnList" />
        from `user`
        <include refid="userSelectCondition" />
    </select>
    <!--     User end -->

</mapper>
